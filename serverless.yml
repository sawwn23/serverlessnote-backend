service: sls-notes
# app and org for use with dashboard.serverless.com
app: notes
org: sawwinnnaung

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: ap-northeast-1

  iam: 
    role: 
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:*


# you can define service wide environment variables here
  environment:
    tableName: notes



functions:
  create:
    handler: src/functions/create.create
    events:
      - http:
          path: v1/notes
          method: POST
          cors: true
          authorizer: aws_iam
  get:
    handler: src/functions/get.get
    events:
      - http:
          path: v1/notes/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    handler: src/functions/list.list
    events:
      - http:
          path: v1/notes
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: src/functions/update.update
    events:
      - http:
          path: v1/notes/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    handler: src/functions/delete.deleteNote
    events:
      - http:
          path: v1/notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

package: 
  individually : true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}